name: Nitrite
repository: https://github.com/nitrite/nitrite-flutter

packages:
  - packages/**
  - examples/**
  - doc/**

ignore:
  - packages/**/build/**
  - examples/**/build/**

command:
  version:
    # Generate commit links in package changelogs.
    linkToCommits: true
    # Only allow versioning to happen on main branch.
    branch: main
    # Additionally build a changelog at the root of the workspace.
    workspaceChangelog: true

scripts:
  lint:all:
    run: melos run analyze && melos run format
    description: Run all static analysis checks.

  analyze:
    run: |
      melos exec -c 10 -- flutter analyze --fatal-infos
    description: Run `flutter analyze` for all packages.

  format:
    run: melos exec dart format . --fix
    description: Run `dart format` for all packages.

  dartdoc:
    run: melos exec dart doc .
    description: Run dartdoc checks for all packages.

  test:all:
    run: |
      melos run test --no-select
    description: |
      Run all tests available.

  test:
    run: |
      melos exec -c 6 --fail-fast --ignore="*generator*" -- flutter test --no-pub &&
      melos exec -c 6 --fail-fast --scope="*generator*" -- dart run build_runner test --no-pub
    description: Run `flutter test` for a specific package.
    select-package:
      dir-exists:
        - test
      ignore:
        - "*examples*"

  coverage:
    run: |
      melos exec -- flutter test --coverage &&
      melos exec -- genhtml coverage/lcov.info --output-directory=coverage/
    select-package:
      dir-exists: test
    description: Generate coverage for the selected package.

  clean:deep:
      run: git clean -x -d -f -q
      description: Clean things very deeply, can be used to establish "pristine checkout" status.