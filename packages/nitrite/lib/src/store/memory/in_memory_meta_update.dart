import 'dart:io';
import 'package:yaml/yaml.dart';
import 'in_memory_meta.dart';

class MetaUpdate {
  String pathToYaml = "";
  String metaDartFileContents = "";
  MetaUpdate(this.pathToYaml);

  void writeMetaDartFile(String metaDartFilePath) {
    File metaDartFile = File(metaDartFilePath);

    String metaDartFileContents = """
/// DO NOT EDIT THIS FILE EXCEPT TO ENTER INITIAL VERSION AND OTHER META INFO 
/// THIS FILE IS AUTOMATICALLY OVER WRITTEN BY MetaUpdate 

Map<String, String> meta = <String, String>{
  "name": "${getPubSpec('name')}",
  "description":
      // ignore: lines_longer_than_80_chars
      "${getPubSpec('description')}",  
  "version":"${getPubSpec('version')}",
};
  """;

    metaDartFile.writeAsStringSync(metaDartFileContents);
  }

  String getPubSpec(String pubSpecParam) {
    File f = File(pathToYaml);

    String yamlText = f.readAsStringSync();
    // ignore: always_specify_types
    Map yaml = loadYaml(yamlText);

    return yaml[pubSpecParam];
  }

  void verifyLatestVersionFromPubSpec() {
    try {
      File f = File(pathToYaml);
      //exit if no pubspec found so no warning in production
      if (!f.existsSync()) return;
      //compare in_memory_meta.dart with pubspec meta and give warning if difference
      if (meta.keys
          .where((dynamic e) => (meta[e] != getPubSpec(e)))
          .isNotEmpty) {
        throw Exception(
            'Version number and other meta attributes in code are different '
                'from pubspec.yaml. Please check pubspec.yaml and then run '
                'test so that MetaUpdate can update meta information in code, '
                'then recompile');
      }
    } on Exception {
      rethrow;
    }
  }
}
