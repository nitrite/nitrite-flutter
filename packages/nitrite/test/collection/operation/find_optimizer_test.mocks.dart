// Mocks generated by Mockito 5.3.2 from annotations
// in nitrite/test/collection/operation/find_optimizer_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:mockito/mockito.dart' as _i1;
import 'package:nitrite/nitrite.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFilter_0 extends _i1.SmartFake implements _i2.Filter {
  _FakeFilter_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Filter].
///
/// See the documentation for Mockito's code generation for more information.
class MockFilter extends _i1.Mock implements _i2.Filter {
  MockFilter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool apply(_i2.Document? doc) => (super.noSuchMethod(
        Invocation.method(
          #apply,
          [doc],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i2.Filter operator ~() => (super.noSuchMethod(
        Invocation.method(
          #~,
          [],
        ),
        returnValue: _FakeFilter_0(
          this,
          Invocation.method(
            #~,
            [],
          ),
        ),
      ) as _i2.Filter);
}
